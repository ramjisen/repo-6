main.tf
-------

provider "aws" {
  region = "${var.region}"
  access_key="AKIAUTJE7BDHPRZEPWWZ"
  secret_key="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"
}


variables.tf
------------

variable "region" {
  default = "us-east-2"
}

variable "vpc-fullcidr"{
  default     = "192.168.0.0/16"
  description = "the vpc cidr block"
}

variable "Subnet-Public-AzA-CIDR" {
  default     = "192.168.1.0/24"
  description = "the cidr of the 2a-Public Subnet"
}

variable "Subnet-Private-AzA-CIDR" {
  default     = "192.168.2.0/24"
  description = "the cidr of the 2a-Private Subnet"
}

variable "Subnet-Public-AzB-CIDR" {
  default     = "192.168.3.0/24"
  description = "the cidr of the 2b-Public Subnet"
}
variable "Subnet-Private-AzB-CIDR" {
  default     = "192.168.4.0/24"
  description = "the cidr of the 2b-Private Subnet"
}


vpc.tf
-------

resource "aws_vpc" "mainvpc" {
  cidr_block = "${var.vpc-fullcidr}"

  #### this 2 true values are for use the internal vpc dns resolution
  #enable_dns_support   = true
  #enable_dns_hostnames = true

  tags = {
    Name = "MainVPC-Ohio"
  }
}


subnets.tf
-----------

resource "aws_subnet" "PublicAZA" {
  vpc_id     = "${aws_vpc.mainvpc.id}"
  cidr_block = "${var.Subnet-Public-AzA-CIDR}"

  tags = {
    Name = "2a-PublicSubnet"
  }

  availability_zone = "${data.aws_availability_zones.available.names[0]}"
}

resource "aws_subnet" "PrivateAZA" {
  vpc_id     = "${aws_vpc.mainvpc.id}"
  cidr_block = "${var.Subnet-Private-AzA-CIDR}"

  tags = {
    Name = "2a-PrivateSubnet"
  }

  availability_zone = "${data.aws_availability_zones.available.names[1]}"
}
resource "aws_subnet" "PublicAZB" {
  vpc_id     = "${aws_vpc.mainvpc.id}"
  cidr_block = "${var.Subnet-Public-AzB-CIDR}"

  tags = {
    Name = "2b-PublicSubnet"
  }

  availability_zone = "${data.aws_availability_zones.available.names[0]}"
}
resource "aws_subnet" "PrivateAZB" {
  vpc_id     = "${aws_vpc.mainvpc.id}"
  cidr_block = "${var.Subnet-Private-AzB-CIDR}"

  tags = {
    Name = "2b-PrivateSubnet"
  }

  availability_zone = "${data.aws_availability_zones.available.names[1]}"
}

resource "aws_route_table_association" "PublicAZA" {
  subnet_id      = "${aws_subnet.PublicAZA.id}"
  route_table_id = "${aws_route_table.public.id}"
}

resource "aws_route_table_association" "PrivateAZA" {
  subnet_id      = "${aws_subnet.PrivateAZA.id}"
  route_table_id = "${aws_route_table.private.id}"
}

resource "aws_route_table_association" "PublicAZB" {
  subnet_id      = "${aws_subnet.PublicAZB.id}"
  route_table_id = "${aws_route_table.public.id}"
}

resource "aws_route_table_association" "PrivateAZB" {
  subnet_id      = "${aws_subnet.PrivateAZB.id}"
  route_table_id = "${aws_route_table.private.id}"
}

routing-and-network.tf
-----------------------
data "aws_availability_zones" "available" {}

resource "aws_internet_gateway" "gw" {
  vpc_id = "${aws_vpc.mainvpc.id}"

  tags = {
    Name = "IGW-MainVPC-Ohio"
  }
}

resource "aws_route_table" "public" {
  vpc_id = "${aws_vpc.mainvpc.id}"

  tags = {
    Name = "Public"
  }

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = "${aws_internet_gateway.gw.id}"
  }
}
resource "aws_route_table" "private" {
  vpc_id = "${aws_vpc.mainvpc.id}"

  tags = {
    Name = "Private"
  }
}


securitygroups.tf
----------------

resource "aws_security_group" "WebServer" {
  name = "WebServer"

  tags = {
    Name = "WebServer-SG"
  }

  description = "ONLY HTTP CONNECTION INBOUD"
  vpc_id      = "${aws_vpc.mainvpc.id}"

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "TCP"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = "22"
    to_port     = "22"
    protocol    = "TCP"
    cidr_blocks = ["0.0.0.0/0"]
  }
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}
